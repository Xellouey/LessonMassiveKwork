"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import sys
sys.path.insert(0, '.')

from database.database import init_db, get_db_session
from services.admin import AdminService

async def check_admins():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await init_db()
    
    async for session in get_db_session():
        admin_service = AdminService(session)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        admins = await admin_service.get_all_admins()
        
        if not admins:
            print("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!")
            print("\nüìù –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
            print("   1. –£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π Telegram ID —á–µ—Ä–µ–∑ @userinfobot")
            print("   2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ create_admin.py")
            print("   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python create_admin.py")
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {len(admins)}")
            print("\nüë• –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:")
            for admin in admins:
                status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if admin.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
                print(f"   ‚Ä¢ ID: {admin.user_id}")
                print(f"     Username: @{admin.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                print(f"     –ü—Ä–∞–≤–∞: {admin.permissions}")
                print(f"     –°—Ç–∞—Ç—É—Å: {status}")
                print(f"     –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: {admin.last_login or '–ù–∏–∫–æ–≥–¥–∞'}")
                print()
        
        break

if __name__ == "__main__":
    try:
        asyncio.run(check_admins())
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()