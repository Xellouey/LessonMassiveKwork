"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import sys
sys.path.insert(0, '.')

from datetime import datetime, timezone
from database.database import init_db, get_db_session
from database.models import Lesson

async def add_sample_lessons():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤"""
    print("üìö –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await init_db()
    
    async for session in get_db_session():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —É—Ä–æ–∫–∏
        from sqlalchemy import select, func
        count_result = await session.execute(select(func.count(Lesson.id)))
        lesson_count = count_result.scalar()
        
        if lesson_count > 0:
            print(f"‚úÖ –£—Ä–æ–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ ({lesson_count} —à—Ç.)")
            return
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É—Ä–æ–∫–∏ —Å —Ç–µ–º–∞—Ç–∏–∫–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –∏ –ò–ò
        lessons = [
            Lesson(
                title="üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫: –ß—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?",
                description="–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∏–¥-–º–∞–≥–Ω–∏—Ç —É—Ä–æ–∫ –æ –º–∏—Ä–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞. –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –ò–ò —É–∂–µ –∏–∑–º–µ–Ω–∏–ª –Ω–∞—à—É –∂–∏–∑–Ω—å –∏ –∫–∞–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–ª—è –≤–∞—à–µ–π –∫–∞—Ä—å–µ—Ä—ã!",
                price_stars=0,
                content_type="text",
                file_id="free_ai_intro",
                duration=300,
                is_active=True,
                is_free=True,
                category="–û—Å–Ω–æ–≤—ã –ò–ò",
                created_at=datetime.now(timezone.utc),
                updated_at=datetime.now(timezone.utc),
                views_count=0
            ),
            Lesson(
                title="ü§ñ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤",
                description="–ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –æ—Å–Ω–æ–≤–∞–º–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏. –£–∑–Ω–∞–π—Ç–µ –æ supervised, unsupervised –∏ reinforcement learning –Ω–∞ –ø—Ä–æ—Å—Ç—ã—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö.",
                price_stars=50,
                content_type="text",
                file_id="ml_basics",
                duration=1200,
                is_active=True,
                is_free=False,
                category="–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
                created_at=datetime.now(timezone.utc),
                updated_at=datetime.now(timezone.utc),
                views_count=0
            ),
            Lesson(
                title="üöÄ –°–æ–∑–¥–∞–Ω–∏–µ AI-—Å—Ç–∞—Ä—Ç–∞–ø–∞: –æ—Ç –∏–¥–µ–∏ –¥–æ MVP",
                description="–ü–æ—à–∞–≥–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –∑–∞–ø—É—Å–∫–∞ —Å—Ç–∞—Ä—Ç–∞–ø–∞ –≤ —Å—Ñ–µ—Ä–µ –ò–ò. –ö–∞–∫ –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É, —Å–æ–∑–¥–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –±–∞–∑–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –∏ –ø—Ä–∏–≤–ª–µ—á—å –ø–µ—Ä–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –†–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã —É—Å–ø–µ—à–Ω—ã—Ö AI-–∫–æ–º–ø–∞–Ω–∏–π.",
                price_stars=150,
                content_type="text",
                file_id="ai_startup_guide",
                duration=2400,
                is_active=True,
                is_free=False,
                category="AI-–ë–∏–∑–Ω–µ—Å",
                created_at=datetime.now(timezone.utc),
                updated_at=datetime.now(timezone.utc),
                views_count=0
            ),
            Lesson(
                title="‚≠ê Prompt Engineering: –∏—Å–∫—É—Å—Å—Ç–≤–æ –æ–±—â–µ–Ω–∏—è —Å –ò–ò",
                description="–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –ø–æ–ª—É—á–∞—Ç—å –º–∞–∫—Å–∏–º—É–º –æ—Ç ChatGPT, Claude –∏ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π. –ò–∑—É—á–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á.",
                price_stars=75,
                content_type="text",
                file_id="prompt_engineering",
                duration=900,
                is_active=True,
                is_free=False,
                category="–ü—Ä–æ–º–ø—Ç-–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥",
                created_at=datetime.now(timezone.utc),
                updated_at=datetime.now(timezone.utc),
                views_count=0
            ),
            Lesson(
                title="üíé –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –ò–ò: –∫–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—è—Ö",
                description="–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞. –°–æ–∑–¥–∞–Ω–∏–µ AI-—Å–µ—Ä–≤–∏—Å–æ–≤, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, NFT —Å –ò–ò. –ö–∞–∫ –≤—ã–π—Ç–∏ –Ω–∞ –¥–æ—Ö–æ–¥—ã –æ—Ç $1000 –¥–æ $10000 –≤ –º–µ—Å—è—Ü.",
                price_stars=250,
                content_type="text", 
                file_id="ai_monetization",
                duration=3600,
                is_active=True,
                is_free=False,
                category="AI-–ó–∞—Ä–∞–±–æ—Ç–æ–∫",
                created_at=datetime.now(timezone.utc),
                updated_at=datetime.now(timezone.utc),
                views_count=0
            )
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É—Ä–æ–∫–∏ –≤ —Å–µ—Å—Å–∏—é
        session.add_all(lessons)
        await session.commit()
        
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(lessons)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Ä–æ–∫–æ–≤:")
        for lesson in lessons:
            price = "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ" if lesson.is_free else f"{lesson.price_stars} ‚≠ê"
            print(f"   ‚Ä¢ {lesson.title} - {price}")
        
        break  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ after first session

if __name__ == "__main__":
    print("üìö –ù–ê–°–¢–†–û–ô–ö–ê –ö–û–ù–¢–ï–ù–¢–ê –ë–û–¢–ê...")
    print()
    
    try:
        asyncio.run(add_sample_lessons())
        print()
        print("üéâ –ì–æ—Ç–æ–≤–æ! –ö–æ–Ω—Ç–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞: python bot.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()