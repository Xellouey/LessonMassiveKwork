"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏
"""
import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from services.statistics import StatisticsService
from keyboards.admin import admin_stats_keyboard, back_to_admin_keyboard
from middlewares.admin import AdminOnlyMiddleware

logger = logging.getLogger(__name__)
router = Router()
router.callback_query.middleware(AdminOnlyMiddleware())


@router.callback_query(F.data == "admin_stats")
async def show_stats_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    try:
        text = """
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</b>

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:

üìà <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b> - –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Å–∏—Å—Ç–µ–º—ã
üí∞ <b>–î–æ—Ö–æ–¥—ã</b> - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–æ—Ö–æ–¥–∞–º –∏ –ø—Ä–æ–¥–∞–∂–∞–º
# üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> - –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
üìö <b>–£—Ä–æ–∫–∏</b> - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É—Ä–æ–∫–∞–º
üìÖ <b>–ó–∞ –ø–µ—Ä–∏–æ–¥</b> - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
üìä <b>–¢–æ–ø —É—Ä–æ–∫–∏</b> - —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Ä–æ–∫–∏
"""

        if callback.message:
            await callback.message.edit_text(
                text,
                reply_markup=admin_stats_keyboard(),
                parse_mode="HTML"
            )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")


@router.callback_query(F.data == "admin_general_stats")
async def show_general_stats(callback: CallbackQuery, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    try:
        stats_service = StatisticsService(session)
        stats = await stats_service.get_general_stats()

        if not stats:
            await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
            return

        text = f"""
üìà <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</b>

üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats.get('total_users', 0)}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö (30 –¥–Ω–µ–π): {stats.get('active_users', 0)}

üìö <b>–£—Ä–æ–∫–∏:</b>
‚Ä¢ –í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤: {stats.get('total_lessons', 0)}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {stats.get('active_lessons', 0)}

üí∞ <b>–ü—Ä–æ–¥–∞–∂–∏:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫: {stats.get('total_purchases', 0)}
‚Ä¢ –û–±—â–∏–π –¥–æ—Ö–æ–¥: ‚≠ê {stats.get('total_revenue', 0)}
‚Ä¢ –î–æ—Ö–æ–¥ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ‚≠ê {stats.get('revenue_per_user', 0)}
"""

        await callback.message.edit_text(
            text,
            reply_markup=back_to_admin_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")


@router.callback_query(F.data == "admin_revenue_stats")
async def show_revenue_stats(callback: CallbackQuery, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Ö–æ–¥–æ–≤"""
    try:
        stats_service = StatisticsService(session)
        stats = await stats_service.get_revenue_stats(30)  # –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π

        if not stats:
            await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ—Ö–æ–¥–æ–≤")
            return

        text = f"""
üí∞ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Ö–æ–¥–æ–≤ (30 –¥–Ω–µ–π)</b>

üìä <b>–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
‚Ä¢ –î–æ—Ö–æ–¥ –∑–∞ –ø–µ—Ä–∏–æ–¥: ‚≠ê {stats.get('period_revenue', 0)}
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: {stats.get('period_purchases', 0)}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ‚≠ê {stats.get('avg_purchase', 0)}

üìÖ <b>–î–æ—Ö–æ–¥—ã –ø–æ –¥–Ω—è–º (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π):</b>
"""

        # –î–æ–±–∞–≤–ª—è–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        daily_revenue = stats.get('daily_revenue', [])
        for day_data in daily_revenue:
            text += f"‚Ä¢ {day_data.get('date', 'N/A')}: ‚≠ê {day_data.get('revenue', 0)}\n"

        await callback.message.edit_text(
            text,
            reply_markup=back_to_admin_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ—Ö–æ–¥–æ–≤: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ—Ö–æ–¥–æ–≤")


@router.callback_query(F.data == "admin_top_lessons")
async def show_top_lessons(callback: CallbackQuery, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø —É—Ä–æ–∫–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º"""
    try:
        stats_service = StatisticsService(session)
        top_lessons = await stats_service.get_top_lessons(10)

        text = "üìä <b>–¢–æ–ø-10 —É—Ä–æ–∫–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º</b>\n\n"

        if not top_lessons:
            text += "üì≠ –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö —É—Ä–æ–∫–æ–≤"
        else:
            for i, lesson in enumerate(top_lessons, 1):
                text += f"{i}. <b>{lesson.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}</b>\n"
                text += f"   üí∞ –¶–µ–Ω–∞: ‚≠ê {lesson.get('price', 0)}\n"
                text += f"   üõí –ü—Ä–æ–¥–∞–∂: {lesson.get('sales', 0)}\n"
                text += f"   üíµ –î–æ—Ö–æ–¥: ‚≠ê {lesson.get('revenue', 0)}\n\n"

        await callback.message.edit_text(
            text,
            reply_markup=back_to_admin_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–ø —É—Ä–æ–∫–æ–≤: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–ø —É—Ä–æ–∫–æ–≤")


@router.callback_query(F.data == "admin_users_stats")
async def show_users_stats(callback: CallbackQuery, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        stats_service = StatisticsService(session)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
        activity_stats = await stats_service.get_user_activity_stats(7)
        conversion_stats = await stats_service.get_conversion_stats()

        text = f"""
üë• <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>

üìà <b>–ö–æ–Ω–≤–µ—Ä—Å–∏—è:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {conversion_stats.get('total_users', 0)}
‚Ä¢ –ü–æ–∫—É–ø–∞—Ç–µ–ª–µ–π: {conversion_stats.get('buyers', 0)}
‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –ø–æ–∫—É–ø–∫—É: {conversion_stats.get('conversion_rate', 0)}%
‚Ä¢ –ü–æ–∫—É–ø–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: {conversion_stats.get('avg_purchases_per_buyer', 0)}

üìÖ <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π):</b>
"""

        # –î–æ–±–∞–≤–ª—è–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        for day_data in activity_stats:
            text += f"‚Ä¢ {day_data.get('date', 'N/A')}: {day_data.get('unique_users', 0)} –ø–æ–ª—å–∑., {day_data.get('total_actions', 0)} –¥–µ–π—Å—Ç–≤–∏–π\n"

        await callback.message.edit_text(
            text,
            reply_markup=back_to_admin_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")


@router.callback_query(F.data == "admin_lessons_statistics")
async def show_lessons_statistics(callback: CallbackQuery, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —É—Ä–æ–∫–∞–º"""
    try:
        stats_service = StatisticsService(session)
        general_stats = await stats_service.get_general_stats()
        top_lessons = await stats_service.get_top_lessons(5)

        text = f"""
üìö <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É—Ä–æ–∫–∞–º</b>

üìä <b>–û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
‚Ä¢ –í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤: {general_stats.get('total_lessons', 0)}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {general_stats.get('active_lessons', 0)}
‚Ä¢ –í—Å–µ–≥–æ –ø—Ä–æ–¥–∞–∂: {general_stats.get('total_purchases', 0)}

üèÜ <b>–¢–æ–ø-5 —É—Ä–æ–∫–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º:</b>
"""

        if not top_lessons:
            text += "üì≠ –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö"
        else:
            for i, lesson in enumerate(top_lessons, 1):
                text += f"{i}. {lesson.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} - {lesson.get('sales', 0)} –ø—Ä–æ–¥–∞–∂\n"

        await callback.message.edit_text(
            text,
            reply_markup=back_to_admin_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—Ä–æ–∫–æ–≤: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—Ä–æ–∫–æ–≤")


@router.callback_query(F.data == "admin_period_stats")
async def show_period_stats(callback: CallbackQuery, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã"""
    try:
        stats_service = StatisticsService(session)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
        stats_7d = await stats_service.get_revenue_stats(7)
        stats_30d = await stats_service.get_revenue_stats(30)
        stats_90d = await stats_service.get_revenue_stats(90)

        text = f"""
üìÖ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º</b>

üìä <b>7 –¥–Ω–µ–π:</b>
‚Ä¢ –î–æ—Ö–æ–¥: ‚≠ê {stats_7d.get('period_revenue', 0)}
‚Ä¢ –ü–æ–∫—É–ø–æ–∫: {stats_7d.get('period_purchases', 0)}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ‚≠ê {stats_7d.get('avg_purchase', 0)}

üìä <b>30 –¥–Ω–µ–π:</b>
‚Ä¢ –î–æ—Ö–æ–¥: ‚≠ê {stats_30d.get('period_revenue', 0)}
‚Ä¢ –ü–æ–∫—É–ø–æ–∫: {stats_30d.get('period_purchases', 0)}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ‚≠ê {stats_30d.get('avg_purchase', 0)}

üìä <b>90 –¥–Ω–µ–π:</b>
‚Ä¢ –î–æ—Ö–æ–¥: ‚≠ê {stats_90d.get('period_revenue', 0)}
‚Ä¢ –ü–æ–∫—É–ø–æ–∫: {stats_90d.get('period_purchases', 0)}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ‚≠ê {stats_90d.get('avg_purchase', 0)}
"""

        await callback.message.edit_text(
            text,
            reply_markup=back_to_admin_keyboard(),
            parse_mode="HTML"
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º")


